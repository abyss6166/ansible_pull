---

- name: collect uname
  tags: virtualbox
  shell: uname -r
  register: uname_result

- name: install packages for VirtualBox
  tags: virtualbox
  apt:
    name:
      - build-essential
      - dkms
      - gcc
      - make
      - linux-headers-{{ uname_result.stdout }}
      - virtualbox-guest-utils 
      - virtualbox-guest-x11

- name: Download VirtualBox Guest Additions install file
  tags: virtualbox
  get_url:
    url: http://download.virtualbox.org/virtualbox/{{ vbox_version }}/VBoxGuestAdditions_{{ vbox_version }}.iso
    dest: /tmp
    owner: root
    group: root

- name: create directory
  tags: directory
  file:
    path: /mnt/iso
    state: directory
    owner: root
    group: root
    mode: 0775

- name: mount VirtualBox iso
  become: true
  shell:
    cmd: mount -o loop VBoxGuestAdditions_{{ vbox_version }}.iso /mnt/iso
    chdir: /tmp/
  args:
    executable: /bin/bash

- name: copy guest additions file
  copy:
    src: /mnt/iso/VBoxLinuxAdditions.run
    dest: /tmp/
    mode: +x
    owner: root
    group: root

- name: set guest additions script to executable
  file:
    path: /tmp/VBoxLinuxAdditions.run
    mode: +x

- name: install VirtualBox Guest Additions
  tags: virtualbox
  become: true
  expect:
    command: sudo sh /tmp/VBoxLinuxAdditions.run --nox11 > /dev/null
    responses:
      '^Do': "Yes"
  ignore_errors: true

# - name: install VirtualBox Guest Additions
#   tags: virtualbox
#   become: true
#   shell:
#     cmd: sudo sh ./VBoxLinuxAdditions.run --nox11 > /dev/null
#     chdir: /tmp
#   args:
#     executable: /bin/bash
#   ignore_errors: true


# - name: Unmount VirtualBox iso
#   become: true
#   shell:
#     cmd: umount /mnt/iso
#   args:
#     executable: /bin/bash

# - name: remove VirtualBox iso
#   file:
#     path: /tmp/VBoxGuestAdditions_{{ vbox_version }}.iso
#     state: absent

# - name: remove VirtualBox guest file
#   file:
#     path: /tmp/VBoxLinuxAdditions.run
#     state: absent

##### Claude version #####
# Simplified VirtualBox Guest Additions for Ubuntu/Debian
- name: install virtualbox guest additions
  vars:
    vbox_iso_url: "http://download.virtualbox.org/virtualbox/{{ vbox_version }}/VBoxGuestAdditions_{{ vbox_version }}.iso"
    mount_point: "/mnt/vbox-iso"

  block:
    - name: get kernel version
      command: uname -r
      register: kernel_ver
      changed_when: false
      tags: virtualbox

    - name: install dependencies
      apt:
        name:
          - build-essential
          - dkms
          - "linux-headers-{{ kernel_ver.stdout }}"
          - gcc
          - make
          - perl
          - bzip2
        state: present
        update_cache: true
        cache_valid_time: 3600
      become: true
      tags: virtualbox

    - name: check if already installed
      command: lsmod | grep -q vboxguest
      register: vbox_loaded
      failed_when: false
      changed_when: false
      tags: virtualbox

    - name: install guest additions from iso
      block:
        - name: download guest additions iso
          get_url:
            url: "{{ vbox_iso_url }}"
            dest: "/tmp/VBoxGuestAdditions.iso"
            mode: '0644'
          become: true

        - name: create mount point
          file:
            path: "{{ mount_point }}"
            state: directory
            mode: '0755'
          become: true

        - name: mount iso
          mount:
            path: "{{ mount_point }}"
            src: "/tmp/VBoxGuestAdditions.iso"
            fstype: iso9660
            opts: loop,ro
            state: mounted
          become: true

        - name: run installer
          command: "sh {{ mount_point }}/VBoxLinuxAdditions.run --nox11"
          become: true
          register: install_output
          failed_when:
            - install_output.rc != 0
            - "'successfully installed' not in install_output.stdout"

        - name: show results
          debug:
            msg: "Guest Additions installed: {{ install_output.stdout_lines[-1] | default('Installation completed') }}"

      when: vbox_loaded.rc != 0
      tags: virtualbox

  always:
    - name: cleanup
      mount:
        path: "{{ mount_point }}"
        state: unmounted
      become: true
      ignore_errors: true
      tags: virtualbox

    - name: remove mount point
      file:
        path: "{{ mount_point }}"
        state: absent
      become: true
      ignore_errors: true
      tags: virtualbox