- name: check if i3 config file exists
  tags: i3
  stat:
    path: /home/{{ user }}/.config/i3/config
  register: i3config

- name: back up i3 config file
  tags: i3
  copy:
    src: /home/{{ user }}/.config/i3/config
    dest: /home/{{ user }}/.config/i3/config.bak
  when: i3config.stat.exists

- name: install i3 config file
  tags: i3
  copy:
    src: files/config
    dest: /home/{{ user }}/.config/i3/config
    backup: yes
    owner: "{{ user }}"
    group: "{{ user }}"

- name: check if picom config file exists
  tags: picom
  stat:
    path: /home/{{ user }}/.config/picom/picom.conf
  register: picomconfig

- name: back up picom.conf file
  tags: picom,i3
  copy:
    src: /home/{{ user }}/.config/picom/picom.conf
    dest: /home/{{ user }}/.config/picom/picom.conf.bak
    owner: "{{ user }}"
    group: "{{ user }}"
  when: picomconfig.stat.exists

- name: install picom config file
  tags: picom,i3
  copy:
    src: files/picom.conf
    dest: /home/{{ user }}/.config/picom/picom.conf
    owner: "{{ user }}"
    group: "{{ user }}"
    backup: yes

- name: wallpaper
  copy:
    src: files/arch.png
    dest: /usr/share/wallpapers/
    owner: "{{ user }}"
    group: "{{ user }}"

- name: install polybar config file
  tags: polybar,i3
  copy:
    src: files/config.ini
    dest: /home/{{ user }}/.config/polybar/
    owner: "{{ user }}"
    group: "{{ user }}"
    backup: yes

- name: install polybar launch file
  tags: polybar,i3
  copy:
    src: files/launch.sh
    dest: /home/{{ user }}/.config/polybar/
    owner: "{{ user }}"
    group: "{{ user }}"
    backup: yes

- name: set polybar script to executable
  tags: polybar
  file:
    path: /home/{{ user }}/.config/polybar/launch.sh
    mode: +x

- name: install quiterss config
  tags: quiterss
  copy:
    src: ../files/QuiteRss.ini
    dest: /home/{{ user }}/.config/QuiteRss/
    owner: "{{ user }}"
    group: "{{ user }}"
    backup: yes

- name: install rofi config file
  tags: rofi,i3
  copy:
    src: files/config.rasi
    dest: /home/{{ user }}/.config/rofi/config.rasi
    owner: "{{ user }}"
    group: "{{ user }}"
    backup: yes

- name: download tilix config file
  tags: tilix
  copy:
    src: files/tilix.dconf
    dest: /home/{{ user }}/
    owner: "{{ user }}"
    group: "{{ user }}"
    backup: yes

- name: download script file
  copy:
    src: files/script.sh
    dest: /home/{{ user }}/
    owner: "{{ user }}"
    group: "{{ user }}"
    backup: yes

- name: set script to executable
  file:
    path: /home/{{ user }}/script.sh
    mode: +x

- name: back up poshtheme file
  tags: poshtheme
  copy:
    src: /home/{{ user }}/.poshthemes/quick-term.omp.json
    dest: /home/{{ user }}/.poshthemes/quick-term.omp.json.bak
    owner: "{{ user }}"
    group: "{{ user }}"

- name: install poshtheme config file
  tags: poshtheme
  copy:
    src: files/quick-term.omp.json
    dest: /home/{{ user }}/.poshthemes
    owner: "{{ user }}"
    group: "{{ user }}"
    backup: yes

- name: install i3blocks config file
  tags: i3blocks,i3
  copy:
    src: files/config-i3blocks
    dest: /home/{{ user }}/.config/i3blocks/config
    owner: "{{ user }}"
    group: "{{ user }}"
    backup: yes


# - name: xdg-user-dirs
#   tags: xdg
#   shell: xdg-user-dirs-update

# - name: add lines to i3 config file
#   tags: i3
#   blockinfile:
#     path: /home/{{ user }}/.config/i3/config
#     block: |
#       # switch between workspaces
#       bindsym $mod+Control+Left workspace prev
#       bindsym $mod+Control+Right workspace next

#       # picom
#       exec picom

# - name: add line to i3 config file
#   tags: i3
#   lineinfile:
#     path: /home/{{ user }}/.config/i3/config
#     insertbefore: '# Font for window titles.*'
#     line: "set $mod Mod4"
#     state: present

# - name: edit i3 config
#   tags: i3
#   lineinfile:
#     path: /home/{{ user }}/.config/i3/config
#     regexp: '^bindsym $mod+Return'
#     line: '# \1'
#     backrefs: yes
#     state: present

# - name: edit i3 config
#   tags: i3
#   lineinfile:
#     path: /home/{{ user }}/.config/i3/config
#     insertafter: '# bindsym $mod+Return *'
#     line: "bindsym $mod+Return exec tilix"
#     state: present


# - name: edit i3 config
#   tags: i3
#   lineinfile:
#     path: /.config/i3/config
#     regexp: '^bindsym $mod+Return'
#     line: "bindsym $mod+Return exec tilix"


# - name: edit user on OneDriveGUI entry
#   tags: onedrive
#   lineinfile:
#     path: /.config/i3/config
#     regexp: '^Exec='
#     line: Exec=/home/{{ user }}/Downloads/OneDriveGUI-1.0.1-x86_64.AppImage
#   when: ansible_distribution == "Fedora"
