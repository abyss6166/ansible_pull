call plug#begin()
Plug 'pearofducks/ansible-vim'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'preservim/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'ryanoasis/vim-devicons'
Plug 'PhilRunninger/nerdtree-visual-selection'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'itchyny/lightline.vim'
Plug 'jiangmiao/auto-pairs'
Plug 'miyakogi/conoline.vim'
Plug 'christoomey/vim-system-copy'
Plug 'easymotion/vim-easymotion'
Plug 'thaerkh/vim-indentguides'
Plug 'mengelbrecht/lightline-bufferline'
Plug 'jlanzarotta/bufexplorer'
call plug#end()

let g:conoline_auto_enable = 1
" let g:lightline = {'colorscheme': 'powerline',}
set laststatus=2

set bg=dark
colorscheme two-firewatch
set termguicolors
set encoding=UTF-8
" set noshowmode

" set mouse=a

" Highlights searches
set hlsearch

" Searches incrementally
set incsearch

" Set tab size
set tabstop=4
set softtabstop=4
set shiftwidth=4

" Convert tab stops to spaces
set expandtab
set autoindent
set fileformat=unix

" Syntax highlighting
syntax on

" Line numbers
" set number relativenumber
set number

" Autocomplete
set wildmode=longest,list,full

" VimPlug
nmap <leader>u :PlugUpdate<CR>
nmap <leader>i :PlugInstall<CR>

" Replace all - alias S
nnoremap S :%s///g<Left><Left><Left>

" Reload .vimrc config file
nnoremap <C-S-R> :source ~/.vimrc<CR>

" Remove highlighting
"nnoremap <C-H> :noh<CR>
map <silent> <leader><cr> :noh<cr>

" New tab - alias control-t
nnoremap <silent> <C-T> :tabnew<CR>

" Fast saving of a buffer
nmap <leader>w :w!<cr>

" Save and quit
nmap <C-s> :w<CR>
nmap <C-q> :q<CR>

" Quick save and quit
nmap <leader>q :wq<CR>

" Cycle tabs
nnoremap <C-Up> gT
nnoremap <C-Down> gt

" Toggle line numbers
nmap <leader>] :set number! <bar> :IndentGuidesToggle<CR>

" Open FZF
nmap <C-f> :FZF<CR>

" Open NERDTree
nmap <C-n> :NERDTreeToggle<CR>

" Paste with system clipboard - alias control-i
nnoremap <S-Insert> <C-i>

" Switch to next buffer - alias control-n
nnoremap <silent> <C-]> :bn<CR>

" Switch to previous buffer - alias control-p
nnoremap <silent> <C-[> :bp<CR>

" Fast deleting of a buffer
nmap <leader>d :bd<CR>

"Add line to bottom
nmap <leader>o GGo

" Use ctrl-arrow to select active split
nmap <silent> <C-S-up> :wincmd k<CR>
nmap <silent> <C-S-down> :wincmd j<CR>
nmap <silent> <C-S-left> :wincmd h<CR>
nmap <silent> <C-S-right> :wincmd l<CR>

" Slim cursor in insert mode
let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

" Surround the visual selection in parenthesis/brackets/etc.
vnoremap $1 <esc>`>a)<esc>`<i(<esc>
vnoremap $2 <esc>`>a]<esc>`<i[<esc>
vnoremap $3 <esc>`>a}<esc>`<i{<esc>
vnoremap $$ <esc>`>a"<esc>`<i"<esc>
vnoremap $q <esc>`>a'<esc>`<i'<esc>
vnoremap $e <esc>`>a`<esc>`<i`<esc>

map <leader>b :BufExplorer<cr>

let g:lightline = {
      \ 'colorscheme': 'one',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ], [ 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'tabline': {
      \   'left': [ ['buffers'] ],
      \   'right': [ ['close'] ]
      \ },
      \ 'component_expand': {
      \   'buffers': 'lightline#bufferline#buffers'
      \ },
      \ 'component_type': {
      \   'buffers': 'tabsel'
      \ }
      \ }
set showtabline=2
let g:lightline#bufferline#enable_devicons = 1
let g:lightline#bufferline#show_number  = 0
function! LightlineStatuslineTabs() abort
  return join(map(range(1, tabpagenr('$')),
        \ '(v:val == tabpagenr() ? "[|] " : "") . lightline#tab#filename(v:val)'), " \u2b81 ")
endfunction

